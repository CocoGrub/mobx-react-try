{"version":3,"sources":["store/index.js","components/ImageController.jsx","components/Comments.jsx","components/LikesSection.jsx","App.js","index.js"],"names":["appStore","id","likes","imageUrl","prevButtonDisable","comments","makeAutoObservable","this","x","push","fetchId","fetch","response","runInAction","url","console","log","length","ImageController","observer","store","useContext","StoreContext","className","size","style","margin","flexDirection","position","src","alt","preview","display","justifyContent","icon","LeftOutlined","type","disabled","onClick","nextImage","RightOutlined","Comments","state","input","useLocalObservable","value","setValue","e","target","textAlign","htmlFor","name","onChange","pushComment","bordered","itemLayout","dataSource","renderItem","listing","Item","Meta","title","LikesSection","marginTop","LikeOutlined","likeThis","marginRight","DislikeOutlined","marginLeft","cursor","document","getElementsByClassName","focus","CommentOutlined","HeartOutlined","commentsCount","App","alignItems","React","createContext","ReactDOM","render","StrictMode","Provider","getElementById"],"mappings":"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","file":"static/js/main.5b3ba480.chunk.js","sourcesContent":["import { runInAction, makeAutoObservable} from \"mobx\"\r\n\r\nclass main{\r\n    id=1\r\n    likes=3\r\n    imageUrl = `https://rickandmortyapi.com/api/character/avatar/1.jpeg`\r\n    prevButtonDisable=true\r\n    comments=['wow','samurai']\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n\r\n    }\r\n    get commentsCount(){\r\n        return this.comments.length\r\n    }\r\n    likeThis(x){\r\n        if(x){\r\n            this.likes++\r\n        }else {\r\n            if(this.likes>0)this.likes--\r\n        }\r\n    }\r\n    pushComment(x){\r\n        this.comments.push(x)\r\n\r\n    }\r\n    async nextImage (x){\r\n        if(x==='prev'){\r\n            this.fetchId = --this.id\r\n        }else {\r\n            this.fetchId = ++this.id\r\n        }\r\n        try {\r\n            const  response = await fetch(`https://rickandmortyapi.com/api/character/avatar/${this.fetchId}.jpeg`)\r\n            runInAction(() => {\r\n                this.imageUrl = response.url\r\n                this.prevButtonDisable = this.id <= 1;\r\n            })\r\n        }catch (e){\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst appStore=new main()\r\nexport default appStore","import React,{useContext} from 'react'\r\nimport {useObserver, Observer, observer} from \"mobx-react-lite\";\r\nimport {LeftOutlined,RightOutlined} from \"@ant-design/icons\";\r\nimport { Image, Button, Space } from 'antd';\r\n\r\nimport {StoreContext} from \"../index\";\r\nimport appStore from \"../store\";\r\n\r\n\r\nconst ImageController =observer(()=>{\r\n\r\n    const store = useContext(StoreContext)\r\n    return (\r\n        <div className={'image-controller'}>\r\n            <Space size={12} style={{margin: '0, auto',flexDirection:'column', position:'relative'}} >\r\n                <Image\r\n                    src={store.imageUrl}\r\n                    alt={\"face-img\"}\r\n                    preview={false}\r\n                />\r\n\r\n                <Space style={{display:'flex', justifyContent:'space-around'}}>\r\n\r\n                <Button\r\n                    icon={<LeftOutlined />}\r\n                    type=\"primary\"\r\n                    disabled={store.prevButtonDisable}\r\n\r\n                    onClick={() => {\r\n                        store.nextImage('prev')\r\n                    }}\r\n                >\r\n                 PREV\r\n                </Button> <Button\r\n                    icon={<RightOutlined />}\r\n                    type=\"primary\"\r\n                    onClick={() => {\r\n                        store.nextImage()\r\n                    }}\r\n                >\r\n                    NEXT\r\n                </Button>\r\n                </Space>\r\n            </Space>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ImageController","import React,{useContext} from \"react\";\r\nimport {observer, useLocalObservable} from \"mobx-react-lite\";\r\nimport {StoreContext} from \"../index\";\r\nimport {List, Input, Button} from \"antd\";\r\n\r\nconst Comments= observer(()=>{\r\n    const state=useContext(StoreContext)\r\n    const input = useLocalObservable(() => ({\r\n        value: '',\r\n        setValue(e) {\r\n            this.value=e.target.value\r\n\r\n        }\r\n\r\n    }))\r\nconst  sendComment=()=>{\r\n        state.pushComment(input.value)\r\n        input.value=''\r\n    }\r\n    return(\r\n        <div style={{margin:'0,auto'}}>\r\n            <div className={'comments-list'} style={{ margin:'1rem 0',textAlign:'left'}}>\r\n                    <label htmlFor={'comment'}>Post a comment</label>\r\n                <div style={{display:'flex'}}>\r\n                    <Input className={'comment'} name={'comment'} value={input.value} onChange={(e)=>{input.setValue(e)}}/>\r\n                    <Button onClick={()=>sendComment(input.value)}>POST</Button>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <List\r\n                size=\"small\"\r\n                bordered\r\n                itemLayout=\"horizontal\"\r\n                dataSource={state.comments}\r\n                renderItem={listing => (\r\n                    <List.Item>\r\n                        <List.Item.Meta title={listing} />\r\n                    </List.Item>\r\n                )}\r\n            />\r\n\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\nexport default Comments","import React,{useContext} from 'react'\r\nimport {observer} from \"mobx-react-lite\";\r\nimport {StoreContext} from \"../index\";\r\nimport {CommentOutlined, DislikeOutlined, HeartOutlined, LikeOutlined} from \"@ant-design/icons\";\r\n\r\nconst LikesSection=observer(()=>{\r\n  const state=useContext(StoreContext)\r\n    return <div>\r\n        <div style={{display:\"flex\",justifyContent:'space-between',marginTop:'1em'}}>\r\n            <div>\r\n                <LikeOutlined onClick={()=>state.likeThis(1)} style={{marginRight:'0.5em'}}/>\r\n                <DislikeOutlined onClick={()=>state.likeThis()} style={{marginLeft:'0.5em'}} />\r\n            </div>\r\n\r\n            <div style={{cursor:'pointer'}} onClick={()=>document.getElementsByClassName('comment')[0].focus()}>\r\n                <CommentOutlined /> comment THIS!\r\n            </div>\r\n        </div>\r\n            <div style={{display:\"flex\",justifyContent:'space-between', marginTop:'1em'}}>\r\n                <div><HeartOutlined/> {state.likes}</div>\r\n                <div>{state.commentsCount} comments</div>\r\n            </div>\r\n\r\n    </div>\r\n})\r\n\r\nexport default LikesSection","import './App.css';\nimport ImageController from \"./components/ImageController\";\nimport Comments from \"./components/Comments\";\nimport {Card} from 'antd'\nimport LikesSection from \"./components/LikesSection\";\n\nfunction App() {\n\nreturn(\n    <div className=\"App\" style={{display:\"flex\",flexDirection:\"column\",alignItems:'center'}}>\n       <Card>\n           <ImageController/>\n           <LikesSection/>\n           <Comments/>\n       </Card>\n\n    </div>\n    )\n\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'\nimport App from  './App';\nimport appStore from \"./store\";\n\nexport const StoreContext = React.createContext('')\n\nReactDOM.render(\n  <React.StrictMode>\n      <StoreContext.Provider value={appStore}>\n          <App />\n      </StoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}